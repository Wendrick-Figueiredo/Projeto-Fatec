// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebPostgreSQL.Models;

#nullable disable

namespace Projeto_Fatec.Migrations.ContextoPacienteMigrations
{
    [DbContext(typeof(ContextoPaciente))]
    partial class ContextoPacienteModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebPostgreSQL.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("PacienteId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro_Paciente")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Bairro_Paciente");

                    b.Property<string>("CEP_Paciente")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("CEP_Paciente");

                    b.Property<string>("Cidade_Paciente")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("Municipio_Paciente");

                    b.Property<string>("Cpf_Paciente")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("Cpf_Paciente");

                    b.Property<DateTime?>("DTNascimento_Paciente")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DTNascimento_Paciente");

                    b.Property<string>("EstadoCivil_Paciente")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("EstadoCivil_Paciente");

                    b.Property<string>("Logradouro_Paciente")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Logradouro_Paciente");

                    b.Property<string>("Nome_Paciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nome_Paciente");

                    b.Property<string>("Numero_Paciente")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("Numero_Paciente");

                    b.Property<string>("Sexo_Paciente")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("Sexo_Paciente");

                    b.Property<string>("Telefone_Paciente")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("Telefone_Paciente");

                    b.Property<string>("UF_Paciente")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("UF_Paciente");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("UsuarioId");

                    b.HasKey("Id");

                    b.ToTable("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
